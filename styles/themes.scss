@use "sass:map";

$themes: (
	standard: (
		back-color: #535353,
		mid-color: #c6c6c6,
		front-color: #eeeeee,
		text-color: #000000,
		front-alt-color: #696969,
		text-alt-color: #f2f2f2,
		link-color: #0000ee,
		link-visited-color: #551a8b,
		link-active-color: #ee0000,
		input-color: #ffffff,
		input-border-color: #8d8d8d,
		input-focus-border-color: #000000,
		button-color: #dadada,
		button-text-color: #3e3e3e,
		button-alt-color: #696969,
		button-text-alt-color: #dddddd
	),
	dark: (
		back-color: #434343,
		mid-color: #383838,
		front-color: #242424,
		text-color: #dadada,
		front-alt-color: #4f4f4f,
		text-alt-color: #f2f2f2,
		link-color: #3db8ff,
		link-visited-color: #bf7cff,
		link-active-color: #ee3333,
		input-color: #1a1a1a,
		input-border-color: #404040,
		input-focus-border-color: #999999,
		button-color: #4c4c4c,
		button-text-color: #dadada,
		button-alt-color: #526cad,
		button-text-alt-color: #f3f3f3
	)
);

$standard-theme: map.get($themes, standard);

// Lets you set a CSS property which varies in value dependent on the user's theme.
@mixin theme(
	// The property to set e.g. `background-color`.
	$property,
	// The name of the theme variable to use for this color e.g. `front-color`.
	$theme-variable
) {
	// In case the browser doesn't support CSS variables.
	#{$property}: map.get($standard-theme, $theme-variable);
	#{$property}: var(--#{$theme-variable});
}