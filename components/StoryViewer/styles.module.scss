@use 'sass:math';
@use 'sass:map';
@use 'styles/themes' as *;

// This is to mimic the apparent horizontal padding of the page container on http://web.archive.org/web/20141103155157/http://www.mspaintadventures.com/index_hscroll.php?s=6&p=008848.
$story-page-container-horizontal-padding: math.div(1200px - 1107px, 2);
$story-page-min-width: 650px;
$story-page-padding: 25px;

.story-page {
	&-container {
		display: flex;
		justify-content: center;
		padding: 7px $story-page-container-horizontal-padding 23px;
	}

	// For browsers that don't support `width: min-content`.
	// `display: table` conveniently allows the element's width to dynamically adjust on older browsers in the same way `width: min-content` works on newer browsers.
	display: table;
	box-sizing: border-box;
	padding: 0 $story-page-padding;
	min-width: $story-page-min-width;
	// For browsers that don't support `min-content`.
	width: $story-page-min-width;
	width: min-content;

	@supports (width: min-content) {
		// We use `display: block` instead of `display: table` because it is no longer necessary when the browser supports `width: min-content`, which not only dynamically adjusts the element's width as `display: table` would, but also makes it easier for custom styles to change various properties while minimizing the need for repetition.
		display: block;
	}

	@include mobile {
		width: 100%;
		min-width: 100%;
	}

	&-title {
		text-align: center;
		padding: 14px 5px;
		font-size: xx-large;
		// Do not assume the theme's default `font-weight` is `bold`.
		font-weight: bold;
	}

	&-content {
		text-align: center;
		padding-bottom: 14px;
		font-size: 0.875em;
		line-height: 1;

		* {
			// This is necessary so an effect hook can detect the original width of elements which should be classed with the `panel` class.
			max-width: none;
		}
	}

	&-links, &-footer {
		padding: 17px 0;
		@include theme(font, alt-font);
		font-weight: normal;
	}

	&-links {
		font-size: x-large;
	}

	&-link-container::before {
		content: '> ';
	}

	&-footer {
		font-size: 0.875em;

		&-group {
			font-size: math.div(10, 14) * 1em;

			&-delimiter::before {
				content: '             ';
				white-space: pre;

				@include mobile {
					content: '';
					display: block;
					// Separate the lines apart a bit to prevent mistapping.
					height: 1.5em;
				}
			}
		}

		.link {
			font-weight: bold;
		}
	}

	&-commentary {
		padding: 17px 0;
		font-size: 0.875em;
	}
}

.panel {
	margin: 0 (-$story-page-padding);
	// For browsers that don't support `stretch`.
	max-width: $page-width - 2 * $story-page-container-horizontal-padding;
	max-width: stretch;

	@include mobile {
		// For browsers that don't support `vw` which might have a viewport width smaller than `$page-width`.
		max-width: 100%;
		// We use `vw` instead of `%` because we want to ignore the padding of the container.
		max-width: 100vw;
	}
}

#basement {
	display: flex;
	align-items: flex-start;

	@include mobile {
		flex-direction: column-reverse;
		align-items: center;
	}

	&-actions {
		text-align: center;
	}

	&-wealth-dungeon {
		width: 175px;

		.wealth-spawner-cage {
			margin: 1em 0;
			height: 600px;
			text-align: center;
		}
	}
}

.basement-section {
	// Use the standard theme's `front-color` as the default in case the browser doesn't support CSS variables.
	border: 7px solid map.get($standard-theme, front-color);
	border-color: var(--front-color);
	padding: 7px;
	min-height: 650px;

	&.mid {
		flex-shrink: 0;

		&:first-child {
			@include desktop {
				border-left: none;
			}

			@include mobile {
				border-bottom: none;
			}
		}

		&:last-child {
			@include desktop {
				border-right: none;
			}

			@include mobile {
				border-top: none;
			}
		}
	}

	&.front {
		flex-grow: 1;

		@include mobile {
			// Stretch to fill the width of the screen on mobile.
			align-self: stretch;
		}
	}

	&:not(:first-child) {
		@include desktop {
			margin-left: 12px;
		}

		@include mobile {
			margin-bottom: 12px;
		}
	}

	&-heading {
		text-align: center;
		@include theme(font, heading-font);
		font-weight: bold;
		font-size: 2em;
		text-transform: uppercase;
	}
}

#sidebar {
	width: 241px;

	&-content {
		text-align: center;
		font-size: 0.875em;
		margin: 2em 0 0.75em;
	}
}

#latest-pages {
	margin: 1em 0;
	padding: 2px;

	.story-log {
		&-listing {
			display: flex;

			& > .link {
				overflow: hidden;
				text-overflow: ellipsis;
				white-space: nowrap;

				.bb {
					white-space: nowrap;
				}

				img {
					max-width: calc(100% - 2ch);
					max-height: 2em;
				}
			}
		}

		&-timestamp-container {
			flex-shrink: 0;
		}
	}
}

#view-all-pages-link-container {
	text-align: center;
	@include theme(font, alt-font);
	text-transform: uppercase;
	margin-bottom: 1em;
}

#story {
	&-meta {
		display: flex;
	}

	&-details {
		flex-grow: 1;
		margin-left: 14px;
	}

	&-title {
		@include theme(font, heading-font);
		font-weight: bold;
		font-size: 2em;
		line-height: 1;
	}

	&-description {
		font-size: 0.875em;
	}

	&-news {
		&-actions {
			text-align: center;
		}

		padding: 2px 14px 14px 0;
		font-size: 0.875em;
	}
}

.story-details-section:not(:last-child) {
	margin-bottom: 0.5ch;
}

#edit-news-tip {
	font-size: 0.875em;
	opacity: 0.5;
	max-width: fit-content;
}